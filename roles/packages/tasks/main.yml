---

- name: Ruby | Add rbenv to .bashrc
  lineinfile:
    dest: ~/.bash_profile
    line: 'eval "$(rbenv init -)"'

- name: Ruby | Install rbenv default gems plugin
  git:
    repo: "https://github.com/rbenv/rbenv-default-gems.git"
    dest: "{{ rbenv_home }}/plugins/rbenv-default-gems"
    accept_hostkey: true

- name: Ruby | Add default gems
  template:
    src: default-gems.j2
    dest: "{{ rbenv_home }}/default-gems"

- name: Ruby | check if target ruby version is installed
  command: "rbenv version"
  register: current_ruby_version

- name: "Ruby | Install ruby {{ ruby_version }}"
  shell: "rbenv install {{ ruby_version }}"
  when: ruby_version not in current_ruby_version.stdout

- name: "Ruby | Set ruby {{ ruby_version }} as global"
  shell: "rbenv global {{ ruby_version }}"

- name: Node | Clone node version manager
  git:
    repo: "https://github.com/creationix/nvm.git"
    dest: "{{ nvm_home }}"
    accept_hostkey: true
  ignore_errors: true

- name: Node | Add default packages
  template:
    src: default-packages.j2
    dest: "{{ nvm_home }}/default-packages"

- name: Node | Install latest node version
  shell: "{{ init_nvm }} && nvm install node"
  register: nvm_result
  changed_when: "'is already installed' not in nvm_result.stderr"

- name: NVM | Enable NVM in .bash_profile
  lineinfile:
    dest: ~/.bash_profile
    line: "{{ init_nvm }}"
